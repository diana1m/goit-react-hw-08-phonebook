{"version":3,"file":"static/js/484.5240b3de.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","redux/contacts/selectors.js","components/Form/Form.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactsItem/ContactItem.styled.js","components/ContactsItem/ContactsItem.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.js","pages/Contacts.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Form as FormikForm, ErrorMessage, Field } from 'formik';\n\nexport const Form = styled(FormikForm)`\n    width: 710px;\n    padding: 40px;\n    margin-bottom: 30px;\n    border: 1px solid #000000;\n    box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.25);\n    border-radius: 12px;\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    margin: 0 auto;\n`;\n\nexport const InputStyled = styled(Field)`\n    height: 60px;\n    background-color: #ECECEC;\n    border-radius: 12px;\n    border: none;\n    padding: 10px;\n    margin-bottom: 24px;\n`\n\nexport const ErrorFormik = styled(ErrorMessage)`\n    color: #be1212;\n    font-style: italic;\n    font-size: 20px;\n    margin-bottom: 24px;\n`;\n\nexport const Button = styled.button`\n    margin-left: auto;\n    margin-right: auto;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 16px 80px;\n    gap: 10px;\n\n    width: 313px;\n    height: 61px;\n\n    background-color: #383886;\n    border-radius: 12px;\n    border: none;\n    color: #ECECEC;\n    cursor: pointer;\n`","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;","import { Formik } from 'formik';\nimport * as yup from 'yup';  \nimport 'yup-phone';\nimport {Form, ErrorFormik, Button, InputStyled} from './Form.styled';\nimport { useDispatch } from \"react-redux\";\nimport { addContact } from 'redux/contacts/operations';\nimport { useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\n\n\nconst phoneRegExp = /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/;\n\nconst Schema = yup.object().shape({\n    name: yup.string(\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\").required(),\n    number: yup.string()\n    .matches(phoneRegExp, 'Phone number is not valid')\n    .required('Please, enter phone number'),\n  });\n\nexport const ContactsForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n\n    return(\n        <Formik \n        initialValues={{ contacts: [], name: '', number: '' }}\n        validationSchema = {Schema}\n        onSubmit={(values, actions) => {\n          \n          if(contacts.find(contact => contact.name === values.name)){\n            return alert(`${values.name} is already in contacts!`)\n          }\n          const contact = {\n            name: values.name,\n            number: values.number,\n          }\n          dispatch(addContact(contact));\n          actions.resetForm();\n        }}\n        >\n          <Form>\n              <label htmlFor=\"name\">Name</label>\n              <InputStyled name=\"name\" type=\"text\"/>\n              <ErrorFormik name=\"name\" component=\"span\"/>\n          \n              <label htmlFor=\"number\">Number</label>\n              <InputStyled name=\"number\" type=\"tel\" />\n              <ErrorFormik name=\"number\" component=\"span\" />\n            \n            \n\n            <Button type=\"submit\" >Add contact</Button>\n          </Form>\n        </Formik>\n    )\n}\n","import styled from \"styled-components\";\n\nexport const FilterLabel = styled.label`\ndisplay: block;\ntext-align: center;\nmargin-bottom: 20px;\n\n`\nexport const FilterWrapper = styled.div`\n margin: 0 auto;\n max-width: 610px;\n margin-bottom: 30px;\n`\n\nexport const InputFilter = styled.input`\n     height: 60px;\n    background-color: #ECECEC;\n    border-radius: 12px;\n    border: none;\n    padding: 10px;\n    margin-bottom: 24px;\n    margin-top: 24px;\n    width: 610px;\n    margin: 0 auto;\n`","import { useDispatch } from 'react-redux';\nimport { filterValue } from 'redux/contacts/filterSlice';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { InputFilter, FilterLabel, FilterWrapper } from 'components/Filter/Filter.styled';\n\n\nexport const Filter = () => {\n    const filter = useSelector(getFilter);\n\n    const dispatch = useDispatch();\n\n    const handleFilter = evt =>{\n        dispatch(filterValue(evt.target.value))\n    }\n    \n    return(\n        <FilterWrapper>\n            <FilterLabel name=\"filter\">Find contact by name</FilterLabel>\n            <InputFilter onChange={handleFilter} value={filter} type=\"text\" name=\"filter\"/>\n        </FilterWrapper>    \n    )\n}\n","import styled from \"styled-components\";\n\nexport const Item = styled.li`\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    width: 500px;\n    justify-content: space-between;\n`\n\nexport const Box = styled.div`\n    display: flex;\n    align-items: baseline;\n    justify-content: space-between;\n    width: 410px;\n`\n\nexport const Number = styled.span`\n    font-size: 20px;\n    line-height: 24px;\n    width: 160px;\n    color: #333333;\n\n`\n\nexport const BtnDelete = styled.button`\n    display: block;\n    \n    /* width: 80px;\n    height: 30px; */\n\n    margin-left: 40px;\n    /* margin-right: auto; */\n    font-weight: 500;\n    font-size: 20px;\n    line-height: 24px;\n\n    text-decoration-line: underline;\n    color: #051422;\n    border: none;\n    background-color: transparent;\n\n    cursor: pointer;\n`","import PropTypes from 'prop-types';\nimport { Item, BtnDelete, Box, Number } from './ContactItem.styled';\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactsItem = ({id, name, number}) => {\n    const dispatch = useDispatch();\n    const handleDelete = () => dispatch(deleteContact(id));\n\n    return(\n        <Item>\n            <Box>\n                <p>{name}: </p>\n                <Number>{number} </Number>\n            </Box>\n            \n            <BtnDelete onClick={handleDelete}>Delete</BtnDelete>\n        </Item>\n    )\n}\n\nContactsItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n}","import styled from \"styled-components\";\n\nexport const List = styled.ul`\nmargin: 0 auto;\nmax-width: 710px;\n`","import { ContactsItem } from \"components/ContactsItem/ContactsItem\";\nimport { useSelector } from \"react-redux\";\nimport { getContacts, getFilter } from \"redux/contacts/selectors\";\nimport { List } from \"./ContactsList.styled\";\n\nexport const ContactsList = () => {\n    const contacts = useSelector(getContacts);\n    const filter = useSelector(getFilter);\n\n    const contactsFilter = contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n\n    return(\n        <List>\n            {contactsFilter.map(contact => <ContactsItem key={contact.id} id={contact.id} name={contact.name} number={contact.number}/>)}\n        </List>\n    )\n}","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactsForm } from 'components/Form/Form';\nimport { getIsLoading } from 'redux/contacts/selectors';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Loader } from 'components/Loader/Loader';\n\n\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n        </Helmet>\n        {isLoading && <Loader/>}\n      <ContactsForm/>\n      <h2>Contacts</h2>\n      <Filter/>\n      <ContactsList/>\n\n      \n    </>\n  );\n}"],"names":["Form","styled","FormikForm","InputStyled","Field","ErrorFormik","ErrorMessage","Button","getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","Schema","yup","shape","name","required","number","matches","ContactsForm","dispatch","useDispatch","useSelector","initialValues","validationSchema","onSubmit","values","actions","find","contact","alert","addContact","resetForm","htmlFor","type","component","FilterLabel","FilterWrapper","InputFilter","Filter","onChange","evt","filterValue","target","value","Item","Box","Number","BtnDelete","ContactsItem","id","onClick","deleteContact","List","ContactsList","contactsFilter","toLowerCase","includes","map","Tasks","useEffect","fetchContacts","Helmet","Loader"],"sourceRoot":""}