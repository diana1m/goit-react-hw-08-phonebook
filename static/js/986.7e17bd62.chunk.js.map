{"version":3,"file":"static/js/986.7e17bd62.chunk.js","mappings":"yRAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uTAcJE,GAAcF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,sKASXI,GAAcJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,sHAOXM,EAASN,EAAAA,GAAAA,OAAH,shB,mIC1BNO,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAwBjB,OACE,SAAC,KAAD,CACEC,SAvBiB,SAACC,EAAQC,GAI5BJ,GACEK,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAOG,KACbC,MAAOJ,EAAOI,MACdC,SAAUL,EAAOK,YAEpBC,SACAC,MAAK,WAEL,IACAC,OAAM,WACLC,EAAAA,GAAAA,MAAA,qBACD,IAEDR,EAAQS,WACT,EAKGC,cAAe,CAAER,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAFlD,UAIE,UAAC,KAAD,CAAQO,aAAa,MAArB,WACE,kBAAOC,QAAQ,OAAf,uBACA,SAAC,KAAD,CAAaC,KAAK,OAAOX,KAAK,UAC9B,kBAAOU,QAAQ,QAAf,oBACA,SAAC,KAAD,CAAaC,KAAK,QAAQX,KAAK,WAC/B,kBAAOU,QAAQ,WAAf,uBACA,SAAC,KAAD,CAAaC,KAAK,WAAWX,KAAK,cAClC,SAAC,KAAD,CAAQW,KAAK,SAAb,0BAIP,EC9Cc,SAASC,IACtB,OACE,+BACE,SAACnB,EAAD,KAGL,C","sources":["components/Form/Form.styled.js","components/Form/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Form as FormikForm, ErrorMessage, Field } from 'formik';\n\nexport const Form = styled(FormikForm)`\n    max-width: 710px;\n    padding: 40px;\n    margin-bottom: 30px;\n    border: 1px solid #000000;\n    box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.25);\n    border-radius: 12px;\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    margin: 0 auto;\n    margin-top: 40px;\n`;\n\nexport const InputStyled = styled(Field)`\n    height: 60px;\n    background-color: #ECECEC;\n    border-radius: 12px;\n    border: none;\n    padding: 10px;\n    margin-bottom: 24px;\n`\n\nexport const ErrorFormik = styled(ErrorMessage)`\n    color: #be1212;\n    font-style: italic;\n    font-size: 20px;\n    margin-bottom: 24px;\n`;\n\nexport const Button = styled.button`\n    margin-left: auto;\n    margin-right: auto;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 16px 80px;\n    gap: 10px;\n\n    max-width: 313px;\n    height: 61px;\n\n    background-color: #383886;\n    border-radius: 12px;\n    border: none;\n    color: #ECECEC;\n    cursor: pointer;\n    transition: background-color 200ms cubic-bezier(0.165, 0.84, 0.44, 1)  ;\n\n    &:hover,\n    &:focus{\n       background-color:  #153462;\n    }\n`","import { Form, InputStyled, Button } from 'components/Form/Form.styled';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Formik } from 'formik';\nimport toast from 'react-hot-toast';\n// import { useAuth } from 'hooks';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  // const { error } = useAuth();\n\n  const handleSubmit = (values, actions) => {\n    // if (error) {\n    //   toast.error(`registration error`);\n    // }\n    dispatch(\n      register({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n    }))\n    .unwrap()\n    .then(() => {\n      // handle result here\n    })\n    .catch(() => {\n      toast.error(`registration error`);\n    });\n\n    actions.resetForm();\n  };\n\n  return (\n    <Formik \n      onSubmit={handleSubmit} \n      initialValues={{ name: '', email: '', password: '' }}\n      >\n      <Form   autoComplete=\"off\">\n        <label htmlFor=\"name\">Username</label>\n        <InputStyled type=\"text\" name=\"name\" />\n        <label htmlFor=\"email\">Email</label>\n        <InputStyled type=\"email\" name=\"email\" />\n        <label htmlFor=\"password\">Password</label>\n        <InputStyled type=\"password\" name=\"password\" />\n        <Button type=\"submit\">Register</Button>\n      </Form>\n    </Formik> \n  );\n};\n","import { RegisterForm } from 'components/Form/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n}"],"names":["Form","styled","FormikForm","InputStyled","Field","ErrorFormik","ErrorMessage","Button","RegisterForm","dispatch","useDispatch","onSubmit","values","actions","register","name","email","password","unwrap","then","catch","toast","resetForm","initialValues","autoComplete","htmlFor","type","Register"],"sourceRoot":""}