{"version":3,"file":"static/js/409.a4b747f4.chunk.js","mappings":"qQAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uQAYJE,GAAcF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,sKASXI,GAAcJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,sHAOXM,EAASN,EAAAA,GAAAA,OAAH,4X,UC/BNO,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEnBC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,E,SCU3BC,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,KAAMF,EAAAA,GAAW,0IAA0IG,WAC3JC,OAAQJ,EAAAA,KACPK,QALe,+EAKM,6BACrBF,SAAS,gCAGDG,EAAe,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MACXb,GAAWc,EAAAA,EAAAA,IAAYhB,GAE7B,OACI,SAAC,KAAD,CACAiB,cAAe,CAAEf,SAAU,GAAIO,KAAM,GAAIE,OAAQ,IACjDO,iBAAoBZ,EACpBa,SAAU,SAACC,EAAQC,GAEjB,GAAGnB,EAASoB,MAAK,SAAAC,GAAO,OAAIA,EAAQd,OAASW,EAAOX,IAA5B,IACtB,OAAOe,MAAM,GAAD,OAAIJ,EAAOX,KAAX,6BAEd,IAAMc,EAAU,CACdd,KAAMW,EAAOX,KACbE,OAAQS,EAAOT,QAEjBG,GAASW,EAAAA,EAAAA,IAAWF,IACpBF,EAAQK,WACT,EAdD,UAgBE,UAAClC,EAAD,YACI,kBAAOmC,QAAQ,OAAf,mBACA,SAAChC,EAAD,CAAac,KAAK,OAAOmB,KAAK,UAC9B,SAAC/B,EAAD,CAAaY,KAAK,OAAOoB,UAAU,UAEnC,kBAAOF,QAAQ,SAAf,qBACA,SAAChC,EAAD,CAAac,KAAK,SAASmB,KAAK,SAChC,SAAC/B,EAAD,CAAaY,KAAK,SAASoB,UAAU,UAIvC,SAAC9B,EAAD,CAAQ6B,KAAK,SAAb,6BAIX,EC9Cc,SAASE,IAEtB,IAAMzB,GAAYW,EAAAA,EAAAA,IAAYZ,GAM9B,OACE,iCACE,SAAC2B,EAAA,EAAD,WACE,+CAED1B,IAAa,oCACd,SAACQ,EAAD,MAIL,C","sources":["components/Form/Form.styled.js","redux/contacts/selectors.js","components/Form/Form.js","pages/Contacts.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Form as FormikForm, ErrorMessage, Field } from 'formik';\n\nexport const Form = styled(FormikForm)`\n    width: 710px;\n    padding: 40px;\n    margin-bottom: 30px;\n    border: 1px solid #000000;\n    box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.25);\n    border-radius: 12px;\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n`;\n\nexport const InputStyled = styled(Field)`\n    height: 60px;\n    background-color: #ECECEC;\n    border-radius: 12px;\n    border: none;\n    padding: 10px;\n    margin-bottom: 24px;\n`\n\nexport const ErrorFormik = styled(ErrorMessage)`\n    color: #be1212;\n    font-style: italic;\n    font-size: 20px;\n    margin-bottom: 24px;\n`;\n\nexport const Button = styled.button`\n    margin-left: auto;\n    margin-right: auto;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 16px 80px;\n    gap: 10px;\n\n    width: 313px;\n    height: 61px;\n\n    background-color: #383886;\n    border-radius: 12px;\n    border: none;\n    color: #ECECEC;\n    cursor: pointer;\n`","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;","import { Formik } from 'formik';\nimport * as yup from 'yup';  \nimport 'yup-phone';\nimport {Form, ErrorFormik, Button, InputStyled} from './Form.styled';\nimport { useDispatch } from \"react-redux\";\nimport { addContact } from 'redux/contacts/operations';\nimport { useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\n\n\nconst phoneRegExp = /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/;\n\nconst Schema = yup.object().shape({\n    name: yup.string(\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\").required(),\n    number: yup.string()\n    .matches(phoneRegExp, 'Phone number is not valid')\n    .required('Please, enter phone number'),\n  });\n\nexport const ContactsForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n\n    return(\n        <Formik \n        initialValues={{ contacts: [], name: '', number: '' }}\n        validationSchema = {Schema}\n        onSubmit={(values, actions) => {\n          \n          if(contacts.find(contact => contact.name === values.name)){\n            return alert(`${values.name} is already in contacts!`)\n          }\n          const contact = {\n            name: values.name,\n            number: values.number,\n          }\n          dispatch(addContact(contact));\n          actions.resetForm();\n        }}\n        >\n          <Form>\n              <label htmlFor=\"name\">Name</label>\n              <InputStyled name=\"name\" type=\"text\"/>\n              <ErrorFormik name=\"name\" component=\"span\"/>\n          \n              <label htmlFor=\"number\">Number</label>\n              <InputStyled name=\"number\" type=\"tel\" />\n              <ErrorFormik name=\"number\" component=\"span\" />\n            \n            \n\n            <Button type=\"submit\" >Add contact</Button>\n          </Form>\n        </Formik>\n    )\n}\n","// import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n// import { fetchContacts } from 'redux/contacts/operations';\n// import { Loader } from 'components/Loader/Loader';\nimport { ContactsForm } from 'components/Form/Form';\nimport { getIsLoading } from 'redux/contacts/selectors';\n\n\nexport default function Tasks() {\n  // const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  // useEffect(() => {\n  //   dispatch(fetchContacts());\n  // }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      {isLoading && <p>Loading</p>}\n      <ContactsForm/>\n\n    </>\n  );\n}"],"names":["Form","styled","FormikForm","InputStyled","Field","ErrorFormik","ErrorMessage","Button","getContacts","state","contacts","items","getIsLoading","isLoading","Schema","yup","shape","name","required","number","matches","ContactsForm","dispatch","useDispatch","useSelector","initialValues","validationSchema","onSubmit","values","actions","find","contact","alert","addContact","resetForm","htmlFor","type","component","Tasks","Helmet"],"sourceRoot":""}